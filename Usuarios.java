
package transportesdecolombia;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public final class Usuarios extends javax.swing.JFrame { // Herencia aplicada hereda desde la clase Jframe
static Connection cn;
        static Statement s;
  
 
 
 // Declaracion de atributos de la clase       
 String identificacion, nombreCompleto, usuario, password, fechaNacimiento, telefono, direccion, ciudad;
 
 
 // ENCAPSULAMIENTO creacion de setters y getters para acceder a los atributos de la clase mediante los metodos

    public String getIdentificacion() {
        return identificacion;
    }

    public void setIdentificacion(String identificacion) {
        this.identificacion = identificacion;
    }

    public String getNombreCompleto() {
        return nombreCompleto;
    }

    public void setNombreCompleto(String nombreCompleto) {
        this.nombreCompleto = nombreCompleto;
    }

    public String getUsuario() {
        return usuario;
    }

    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getFechaNacimiento() {
        return fechaNacimiento;
    }

    public void setFechaNacimiento(String fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    public String getTelefono() {
        return telefono;
    }

    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    public String getDireccion() {
        return direccion;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    public String getCiudad() {
        return ciudad;
    }

    public void setCiudad(String ciudad) {
        this.ciudad = ciudad;
    }
 
 
 
 
 
 
 
 
 
    public Usuarios() {
        initComponents();
        llenarGrilla();
        
        Login obj = new Login();
        String emple=obj.getUsuario();
        lbl_empleado.setText(emple);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_identificacion = new javax.swing.JTextField();
        txt_nombreCompleto = new javax.swing.JTextField();
        txt_fechaNacimiento = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        txt_direccion = new javax.swing.JTextField();
        txt_ciudad = new javax.swing.JTextField();
        btn_registro = new javax.swing.JButton();
        btn_consulta = new javax.swing.JButton();
        btn_eliminacion = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        btn_ingresoEnvios = new javax.swing.JButton();
        btn_reportes = new javax.swing.JButton();
        btn_consultaCiudad = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_usuario = new javax.swing.JTextField();
        txt_password = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btn_vertodos = new javax.swing.JButton();
        btn_limpiarcampos = new javax.swing.JButton();
        lbl_empleado = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("GESTION DE USUARIOS");

        jLabel2.setText("Identificacón");

        jLabel3.setText(" Nombre Completo");

        jLabel4.setText("Fecha de Nacimiento");

        jLabel5.setText("Teléfono");

        jLabel6.setText("Dirección");

        jLabel7.setText("Ciudad");

        btn_registro.setText("Registro");
        btn_registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registroActionPerformed(evt);
            }
        });

        btn_consulta.setText("Consulta");
        btn_consulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultaActionPerformed(evt);
            }
        });

        btn_eliminacion.setText("Eliminación");
        btn_eliminacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminacionActionPerformed(evt);
            }
        });

        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        btn_ingresoEnvios.setText("Ingreso envios");
        btn_ingresoEnvios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ingresoEnviosActionPerformed(evt);
            }
        });

        btn_reportes.setText("Reportes");
        btn_reportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reportesActionPerformed(evt);
            }
        });

        btn_consultaCiudad.setText("Consulta Ciudad");
        btn_consultaCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultaCiudadActionPerformed(evt);
            }
        });

        jLabel8.setText("Usuario");

        jLabel9.setText("Password");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        btn_vertodos.setText("Ver Todos");
        btn_vertodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_vertodosActionPerformed(evt);
            }
        });

        btn_limpiarcampos.setText("Limpiar Campos");
        btn_limpiarcampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarcamposActionPerformed(evt);
            }
        });

        lbl_empleado.setText("Empleado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_empleado)
                                    .addComponent(jLabel2)))
                            .addComponent(btn_registro))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_consulta)
                                .addGap(68, 68, 68)
                                .addComponent(btn_eliminacion)
                                .addGap(37, 37, 37)
                                .addComponent(btn_consultaCiudad))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_identificacion)
                                    .addComponent(txt_nombreCompleto)
                                    .addComponent(txt_fechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_telefono)
                                    .addComponent(txt_direccion)
                                    .addComponent(txt_ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_usuario)
                            .addComponent(txt_password, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(763, Short.MAX_VALUE)
                                .addComponent(btn_ingresoEnvios, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn_vertodos)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane1))))
                        .addGap(18, 18, 18)
                        .addComponent(btn_reportes, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_limpiarcampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_salir)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_limpiarcampos)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_empleado)
                        .addGap(32, 32, 32)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_nombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txt_fechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txt_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txt_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txt_ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_registro)
                    .addComponent(btn_consulta)
                    .addComponent(btn_eliminacion)
                    .addComponent(btn_ingresoEnvios)
                    .addComponent(btn_reportes)
                    .addComponent(btn_consultaCiudad))
                .addGap(18, 18, 18)
                .addComponent(btn_vertodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(133, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_registroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registroActionPerformed
        
    
    
        // asignacion de valores a los atributos mediante encapsulamiento desde los valores ingresados en los campos de texto    
            setIdentificacion(txt_identificacion.getText());
            setNombreCompleto(txt_nombreCompleto.getText());
            setUsuario(txt_usuario.getText());
            setPassword(password = txt_password.getText()); 
            setFechaNacimiento(fechaNacimiento = txt_fechaNacimiento.getText());
            setTelefono(telefono = txt_telefono.getText());
            setDireccion(direccion = txt_direccion.getText());
            setCiudad(ciudad = txt_ciudad.getText());
        
        
        Conexion con = new Conexion();
        Connection cone = con.conexion();
       // String nombre, puesto;
        
        String sql;
       
        sql = "INSERT INTO usuarios VALUES ('"+getIdentificacion()+"','"+getNombreCompleto()+"', '"+getUsuario()+"', '"+getPassword()+"', '"+getFechaNacimiento()+"', '"+getTelefono()+"', '"+getDireccion()+"', '"+getCiudad()+"')"; 
     
        
        try {
               Statement reg = cone.createStatement();
               reg.executeUpdate(sql);
            
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    

             
    }//GEN-LAST:event_btn_registroActionPerformed

    private void btn_consultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultaActionPerformed
        String buscado = JOptionPane.showInputDialog("Ingrese la identificacion o ciudad del usuario a buscar");

        
        
        Conexion con = new Conexion();
        Connection cone = con.conexion();
       
        
        String sql;
    
      
        sql = "SELECT * FROM usuarios WHERE identificacion = '"+buscado+"' OR ciudad= '"+buscado+"'"; 
     
        
        try {
               Statement reg = cone.createStatement();
               ResultSet rs = reg.executeQuery(sql);
               ResultSetMetaData rsMD= rs.getMetaData();
               int numeroColumnas = rsMD.getColumnCount();
           
                 if (rs.next() == false) {
                 
                 JOptionPane.showMessageDialog(this, "Registro no encontrado, intente  de nuevo");
             }  
        
              rs = reg.executeQuery(sql);
               String  nom="", ide="", usu="", fec="", tel="", dir="", ciu="", pas="" ;
               while (rs.next()) {
                  
                  usu=rs.getString("usuario");
                  dir=rs.getString("direccion"); 
                  tel=rs.getString("telefono"); 
                  fec=rs.getString("fechanacimiento"); 
                  nom=rs.getString("nombrecompleto"); 
                  ide=rs.getString("identificacion"); 
                  ciu=rs.getString("ciudad");
                  pas=rs.getString("password");
                  
                  txt_nombreCompleto.setText(nom);
                  txt_identificacion.setText(ide);
                  txt_usuario.setText(usu);
                  txt_password.setText(pas);
                  txt_fechaNacimiento.setText(fec);
                  txt_telefono.setText(tel);
                  txt_direccion.setText(dir);
                  txt_ciudad.setText(ciu);
                  
                 
               }
              
        }
        
        
        catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
      // cargue de la Grilla;
        
        String sql2;
        
      
        sql2 = "SELECT usuarios.identificacion, usuarios.nombrecompleto, usuarios.fechanacimiento, usuarios.telefono, usuarios.direccion, usuarios.ciudad  FROM usuarios WHERE identificacion = '"+buscado+"' OR ciudad= '"+buscado+"'"; 
     
        
        try {
               Statement reg = cone.createStatement();
               ResultSet rs = reg.executeQuery(sql2);
               ResultSetMetaData rsMD= rs.getMetaData();
               int numeroColumnas = rsMD.getColumnCount();
               
               DefaultTableModel modelo = new DefaultTableModel();
               this.tabla.setModel(modelo);
               
               for (int x=1; x<=numeroColumnas; x++) {
                   modelo.addColumn(rsMD.getColumnLabel(x));
               }
               //reg.executeUpdate(sql);
               
               while (rs.next()) {
                   Object [] fila = new Object[numeroColumnas];
                   
                   for (int y=0; y<numeroColumnas; y++) {
                       fila [y]=rs.getObject(y+1);
                       
                   }
                   modelo.addRow(fila);
               }
            
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_btn_consultaActionPerformed

    private void btn_eliminacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminacionActionPerformed
         String buscado = JOptionPane.showInputDialog("Ingrese la identificacion del usuario a eliminar");
         
        
        Conexion con = new Conexion();
        Connection cone = con.conexion();
       
        
        String sql;
    
      
        sql = "SELECT * FROM usuarios WHERE identificacion like '%"+buscado+"%'"; 
     
        
        try {
               Statement reg = cone.createStatement();
               ResultSet rs = reg.executeQuery(sql);
               ResultSetMetaData rsMD= rs.getMetaData();
               int numeroColumnas = rsMD.getColumnCount();
           
                 if (rs.next() == false) {
                 
                 JOptionPane.showMessageDialog(this, "Registro no encontrado, intente  de nuevo");
             } else {
                  rs = reg.executeQuery(sql);   
                 while (rs.next()) {
                 
                  String  nom="", ide="", usu="", fec="", tel="", dir="", ciu="", pas="" ; // declaración e inicializacion de variables temporales         
                  usu=rs.getString("usuario");
                  dir=rs.getString("direccion"); 
                  tel=rs.getString("telefono"); 
                  fec=rs.getString("fechanacimiento"); 
                  nom=rs.getString("nombrecompleto"); 
                  ide=rs.getString("identificacion"); 
                  ciu=rs.getString("ciudad");
                  pas=rs.getString("password");        
                          
                          
                  txt_nombreCompleto.setText(nom);
                  txt_identificacion.setText(ide);
                  txt_usuario.setText(usu);
                  txt_password.setText(pas);
                  txt_fechaNacimiento.setText(fec);
                  txt_telefono.setText(tel);
                  txt_direccion.setText(dir);
                  txt_ciudad.setText(ciu);
                      } // fin del mientras
                     String confirma=JOptionPane.showInputDialog("Desea eliminar el registro... S/N"); // confirmacion de si desea eliminar registro
                     if ("S".equals(confirma.toUpperCase())) { // condicional que evalua si la respuesta es afirmativa convierte la entrada en MAYUSCULA
                      sql = "DELETE FROM usuarios WHERE identificacion = '"+buscado+"'";  // cadena que guarda el sql para eliminar el registro
                       PreparedStatement preparedStmt = cone.prepareStatement(sql); // asignación para ejecucación de la sentencia sql mediante objeto de la clase PreparedStatment que fue heredado 
                       boolean execute = preparedStmt.execute(); // ejecucuión de la sentencia por parte del objeto preparedStmt y el metodo execute()
                         
                     }
                 } // fin del else
                 
        }
                 
                  catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_eliminacionActionPerformed

    private void btn_consultaCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultaCiudadActionPerformed
        ConsultaCiudad consu = new ConsultaCiudad(); // instanciamos la clase Cponsultaciudad con el objeto consu
        consu.setVisible(true); // visualizamos el formulario de consulta por ciudad
    }//GEN-LAST:event_btn_consultaCiudadActionPerformed

    
    public void llenarGrilla() {
          Conexion con = new Conexion();
        Connection cone = con.conexion();
        
        
        String sql3;
        
      
        sql3 = "SELECT usuarios.identificacion, usuarios.nombrecompleto, usuarios.fechanacimiento, usuarios.telefono, usuarios.direccion, usuarios.ciudad  FROM usuarios  "; 
     
        
        try {
               Statement reg = cone.createStatement();
               ResultSet rs = reg.executeQuery(sql3);
               ResultSetMetaData rsMD= rs.getMetaData();
               int numeroColumnas = rsMD.getColumnCount();
               
               DefaultTableModel modelo = new DefaultTableModel();
               this.tabla.setModel(modelo);
               
               for (int x=1; x<=numeroColumnas; x++) {
                   modelo.addColumn(rsMD.getColumnLabel(x));
               }
               //reg.executeUpdate(sql);
               
               while (rs.next()) {
                   Object [] fila = new Object[numeroColumnas];
                   
                   for (int y=0; y<numeroColumnas; y++) {
                       fila [y]=rs.getObject(y+1);
                       
                   }
                   modelo.addRow(fila);
               }
            
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btn_vertodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_vertodosActionPerformed
       
        llenarGrilla();
        
          
    }//GEN-LAST:event_btn_vertodosActionPerformed

    private void btn_limpiarcamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarcamposActionPerformed
       txt_ciudad.setText("");
       txt_direccion.setText("");
       txt_fechaNacimiento.setText("");
       txt_identificacion.setText("");
       txt_nombreCompleto.setText("");
       txt_password.setText("");
       txt_telefono.setText("");
       txt_usuario.setText("");
    }//GEN-LAST:event_btn_limpiarcamposActionPerformed

    private void btn_reportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reportesActionPerformed
        Reportes repor = new Reportes();
        repor.setVisible(true);
    }//GEN-LAST:event_btn_reportesActionPerformed

    private void btn_ingresoEnviosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ingresoEnviosActionPerformed
        Envios envi = new Envios();
        envi.setVisible(true);
    }//GEN-LAST:event_btn_ingresoEnviosActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_consulta;
    private javax.swing.JButton btn_consultaCiudad;
    private javax.swing.JButton btn_eliminacion;
    private javax.swing.JButton btn_ingresoEnvios;
    private javax.swing.JButton btn_limpiarcampos;
    private javax.swing.JButton btn_registro;
    private javax.swing.JButton btn_reportes;
    private javax.swing.JButton btn_salir;
    private javax.swing.JButton btn_vertodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_empleado;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txt_ciudad;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_fechaNacimiento;
    private javax.swing.JTextField txt_identificacion;
    private javax.swing.JTextField txt_nombreCompleto;
    private javax.swing.JTextField txt_password;
    private javax.swing.JTextField txt_telefono;
    private javax.swing.JTextField txt_usuario;
    // End of variables declaration//GEN-END:variables
}
